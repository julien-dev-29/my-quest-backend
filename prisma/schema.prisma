// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  username  String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  profile   Profile?
  posts     Post[]
  likes     Like[]
  comment   Comment[]
}

model Profile {
  id        String  @id @default(cuid())
  userId    String  @unique
  name      String?
  bio       String?
  avatarUrl String?
  user      User    @relation(fields: [userId], references: [id])
}

model Post {
  id        String   @id @default(cuid())
  content   String
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Comment {
  id     String  @id @default(cuid())
  Like   Like[]
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Like {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?
  comment   Comment? @relation(fields: [commentId], references: [id])
  commentId String?
  createdAt DateTime @default(now())
}
